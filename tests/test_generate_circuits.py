import pytest

from cutqc2.library.utils import generate_circ

# mapping from circuit type to num_qubits => depth
circuits = {
    "supremacy": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        35: (10, 15),
    },
    "sycamore": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        35: (10, 15),
    },
    "hwea": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        35: (10, 15),
    },
    "bv": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        35: (10, 15),
        40: (10, 15),
        45: (10, 15),
        50: (10, 15),
    },
    "qft": {
        10: (10, 15),
        30: (10, 15),
        40: (10, 15),
        45: (10, 15),
        50: (10, 15),
    },
    "aqft": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        35: (10, 15),
        40: (10, 15),
        45: (10, 15),
        50: (10, 15),
    },
    "adder": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        34: (10, 15),
        40: (10, 15),
        44: (10, 15),
        50: (10, 15),
    },
    "regular": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        36: (10, 15),
        40: (10, 15),
        44: (10, 15),
        50: (10, 15),
    },
    "erdos": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        35: (10, 15),
        40: (10, 15),
        45: (10, 15),
        50: (10, 15),
    },
    "random": {
        8: (10, 15, 20, 25, 30, 35, 40),
        12: (10, 15, 20),
        16: (10, 15, 20),
        20: (10, 15, 20),
        30: (10, 15),
        35: (10, 15),
        40: (10, 15),
        45: (10, 15),
        50: (10, 15),
    },
}


params = [
    (circuit_type, nq, depth)
    for circuit_type, qubits_to_depths in circuits.items()
    for nq, depths in qubits_to_depths.items()
    for depth in depths
]


@pytest.mark.parametrize(("circuit_type", "nq", "depth"), params)
def test_generate_circuits(circuit_type, nq, depth):
    circuit = generate_circ(nq, depth, circuit_type, "q", connected_only=False, seed=42)
    assert circuit is not None
