name: Test unpinned dependencies

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    name: Build and test
    runs-on: [macos-latest, self-hosted]
    environment: CI

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Create venv
      run: |
        uv venv --python ${{ matrix.python-version }}

    - name: Install cudaq
      # Due to a known issue with uv failing to install cudaq on first try,
      # we manually install it twice in a row
      # See https://github.com/astral-sh/uv/issues/12759
      run: |
        uv pip install --python .venv/bin/python cudaq
        uv pip install --python .venv/bin/python cudaq

    - name: Install package with dev/gpu deps
      if: contains(runner.labels, 'self-hosted')
      run: |
        uv pip install --python .venv/bin/python -e .[dev,gpu]
        uv pip freeze --python .venv/bin/python

    - name: Install package with dev deps
      if:  ${{ !contains(runner.labels, 'self-hosted') }}
      run: |
        uv pip install --python .venv/bin/python -e .[dev]
        uv pip freeze --python .venv/bin/python

    - name: Pytest
      if: contains(runner.labels, 'self-hosted')
      run: |
        module load openmpi/gcc/4.1.6
        uv run python -m pytest
      env:
        GUROBI_WLSACCESSID: ${{ vars.GUROBI_WLSACCESSID }}
        GUROBI_LICENSEID: ${{ vars.GUROBI_LICENSEID }}
        GUROBI_WLSSECRET: ${{ secrets.GUROBI_WLSSECRET }}

    - name: Pytest
      if:  ${{ !contains(runner.labels, 'self-hosted') }}
      run: |
        uv run python -m pytest
      env:
        GUROBI_WLSACCESSID: ${{ vars.GUROBI_WLSACCESSID }}
        GUROBI_LICENSEID: ${{ vars.GUROBI_LICENSEID }}
        GUROBI_WLSSECRET: ${{ secrets.GUROBI_WLSSECRET }}
